#!/usr/bin/bash
Databases="databases"
source ./scripts/functions
source ./scripts/table_operations
# Function to create a database
create_DB() {
    DBname=$(zenity --entry --text="Enter database name")
    
    if [[ -z "$DBname" || "$DBname" =~ ^[" "]+$ ]]; then
        zenity --error --text="Database name cannot be empty!"
        return
    fi

    if [[ ! "$DBname" =~ ^[a-zA-Z0-9_\-]+$ ]]; then
        zenity --error --text="Database name can only contain alphanumeric characters, underscores (_), and hyphens (-)!"
        return
    fi

    if [[ ! "$DBname" =~ [a-zA-Z] ]]; then
        zenity --error --text="Database name must contain at least one alphabetic character!"
        return
    fi

    if [[ -d "$Databases/$DBname" ]]; then
        zenity --warning --text="Database '$DBname' already exists!"
    else
        mkdir -p "$Databases/$DBname"
        zenity --notification --text="Database '$DBname' created successfully!"
    fi
}
# Function to list all databases
list_DBS() {
        if [[ -d "$Databases" ]]
        then
            options=$(ls "$Databases")
            zenity --list --title="Databases" --column="Databases" $options
        else
            zenity --error --text="No databases exist yet!"
        fi
}
# Function to connect to a database
connect_DBS() {
        db_name=$(zenity --entry --text="please enter the database name")
        if [[ -z "$db_name" || "$db_name" =~ ^[" "]+$ ]]
        then
            zenity --error --text="Database name cannot be empty!"
            return
        fi
        if [[ -d "$Databases/$db_name" ]]
        then
            zenity --notification --text="Connected to database '$db_name'"
            cd $Databases/$db_name
            while true
            do
            Db_options=$(zenity --list --title="$selected_db" --column="options" \
                    "Create Table" \
                    "List Tables" \
                    "Drop Table" \
                    "Insert Into Table" \
                    "Select From Table" \
                    "Delete From Table" \
                    "Update Table" \
                    "Back"
                    )
                      # Check if the user canceled or closed the dialog
    if [[ $? -ne 0 ]]; then
        zenity --info --text="Operation canceled."
        cd ../..
        break
    fi

                case $Db_options in
                    "Create Table") create_table ;;
                    "List Tables") list_tables ;;
                    "Drop Table") drop_table ;;
                    "Insert Into Table") insert_into_table ;;
                    "Select From Table") select_from_table ;;
                    "Delete From Table") delete_from_table ;;
                    "Update Table") update_table ;;
                    "Back") 
                    cd ../..
                    break ;;
                    *) zenity --error --text="Invalid option!" ;;
                esac
            done
        else
            zenity --error --text="Database '$db_name' does not exist!"
        fi
}

# Function to delete a database
delete_db() {
    local options selected_db

    options=$(ls $Databases 2>/dev/null)

    if [[ -z "$options" ]]; then
        zenity --error --text="No databases available to delete."
        return
    fi

    selected_db=$(zenity --list --title="Delete Database" --column="Databases" $options)

    if [[ -n "$selected_db" ]]; then
        zenity --question \
               --title="Confirm Deletion" \
               --text="Are you sure you want to delete the database '$selected_db'? This action cannot be undone." \
               --ok-label="Yes, delete it" \
               --cancel-label="Cancel"

        # Check the user's response
        if [[ $? -eq 0 ]]; then
            # User confirmed, delete the database
            rm -rf "$Databases/$selected_db"
            zenity --notification --text="Database '$selected_db' deleted successfully."
        else
            # User canceled, do nothing
            zenity --notification --text="Deletion of database '$selected_db' canceled."
        fi
    fi
}

  

# Main Menu
while true; do
    selected=$(zenity --list --title="Main Menu" --column="Options" \
        "Create Database" \
        "List Databases" \
        "Connect to Database" \
        "Drop Database" \
        "Exit"
    )

    # Check if the user canceled or closed the dialog
    if [[ $? -ne 0 ]]; then
        zenity --info --text="Operation canceled."
        break
    fi

    # Handle the selected option
    case $selected in
        "Create Database") create_DB ;;
        "List Databases") list_DBS ;;
        "Connect to Database") connect_DBS ;;
        "Drop Database") delete_db ;;
        "Exit")
            zenity --info --text="Goodbye!"
            break 
            ;;
        *) zenity --error --text="Invalid option!" ;;
    esac
done