#!/bin/bash
    create_table() {
        Tb_name=$(zenity --entry --text="Please Enter Table Name")
                            if [[ -z $Tb_name || $Tb_name =~ ^[" "]+$ ]]
                            then
                                zenity --error --text="Table Name Can't be Empty"
                                return
                            fi
                            if [[ -e $Tb_name ]]
                            then
                                zenity --error --text="Table already Exists"
                            else
                                while true
                                do
                                col_num=$(zenity --entry --text="Please Enter Columns Numbers")
                                isInt $col_num
                                if [[ $? -eq 0 ]]
                                then
                                    break
                                else
                                    continue
                                fi
                                done
                                flag=0
                                for((i=0;i<$col_num;i++))
                                do
                                line=""
                                while true
                                do
                                colname=$(zenity --entry --text="Please enter column $((i+1)) Name")
                                if [[ $(cat .$Tb_name-metadata 2> /dev/null | cut -d: -f1 | grep -w $colname 2> /dev/null) ]]
                                then
                                    zenity --error --text="Column $colname already exists"
                                    continue
                                fi
                                if [[ -z $colname || $colname =~ ^[" "]+$ ]]
                                then
                                    zenity --warning --text="Column Name Can't be Empty"
                                    continue
                                fi
                                isChar $colname
                                if [[ $? -eq 0 ]]
                                then
                                    zenity --notification --text="Column $colname Created"
                                    line+=$colname:
                                    break
                                else
                                    continue
                                fi
                                done
                                while true
                                do
                                col_data=$(zenity --entry --text="Please Enter Data Type (int-char)")
                                if [[ -z $col_data ]]
                                then
                                    zenity --warning --text="Column Datatype Can't be Empty"
                                    continue
                                fi
                                if ! [[ ${col_data^^} =~ ^(CHAR|INT)$ ]]
                                then
                                    zenity --warning --text="Allowed Data types (int - char)"
                                    continue 
                                    else
                                        line+=$col_data:
                                        break
                                    fi
                                    done
                                    if [[ $flag -eq 0 ]]
                            then
                                if $(zenity --question --text="Do you want $col_name to be primary key ?")
                                then
                                line+=pk
                                flag=1
                                fi
                    fi
                    echo $line >> .$Tb_name-metadata
                                done
                                touch $Tb_name
                                zenity --notification --text="Table $Tb_name created"
                            fi
    }
   list_tables() {
    tables=$(ls -p | grep -v / | grep -v '^\.')
    #echo $tables
    metadata_files=$(ls -a | grep '^\.' | grep -v '^\.\.$' | grep -v '^\.$')
    #echo $metadata_files
    if [[ -z "$tables" && -z "$metadata_files" ]]
     then
        zenity --error --text="No tables exist in this database!"
    else
        zenity --list --title="Tables" --column="Tables" $tables
    fi
}
    drop_table() {
        Tb_name=$(zenity --entry --text="Please Enter Table Name")
                            if [[ -z $Tb_name || $Tb_name =~ ^[" "]+$ ]]
                            then
                                zenity --error --text="Table Name Can't be Empty"
                            else
                                if [[ -e $Tb_name ]]
                                then
                                    rm $Tb_name
                                    rm .$Tb_name-metadata
                                    zenity --notification --text="Table $Tb_name Dropped"
                                else
                                    zenity --error --text="Table $Tb_name doesn't exist"
                                fi
                            fi
    }
insert_into_table() {
    Tb_name=$(zenity --entry --text="Please Enter Table Name")
    if [[ -z $Tb_name || $Tb_name =~ ^[" "]+$ ]]; then
        zenity --error --text="Table Name Can't Be Empty"
        return
    fi

    if [[ ! -e $Tb_name ]]; then
        zenity --error --text="Table '$Tb_name' Does Not Exist"
        return
    fi

    metadata_file=".$Tb_name-metadata"
    if [[ ! -e $metadata_file ]]; then
        zenity --error --text="Metadata for Table '$Tb_name' Does Not Exist"
        return
    fi

    columns=($(cut -d: -f1 $metadata_file))
    data_types=($(cut -d: -f2 $metadata_file))
    primary_key=$(awk -F: '/pk/{print $1}' $metadata_file)
    row_data=()

    for ((i = 0; i < ${#columns[@]}; i++)); do
        column_name=${columns[$i]}
        data_type=${data_types[$i]}

        while true; do
            data=$(zenity --entry --text="Enter value for '$column_name' ($data_type):")
            if [[ -z $data ]]; then
                zenity --error --text="Value for '$column_name' Cannot Be Empty"
                continue
            fi

            if [[ $data_type == "int" ]]; then
                isInt "$data"
                if [[ $? -ne 0 ]]; then
                    continue
                fi
            elif [[ $data_type == "char" ]]; then
                isChar "$data"
                if [[ $? -ne 0 ]]; then
                    continue
                fi
            fi

            if [[ $column_name == $primary_key ]]; then
                if grep -q "^$data:" $Tb_name; then
                    zenity --error --text="Primary key '$data' already exists in the table."
                    continue
                fi
            fi

            row_data+=("$data")
            break
        done
    done

    # Join the row data with a colon (:) separator and append it to the table file
    row=$(IFS=:; echo "${row_data[*]}")
    echo "$row" >> $Tb_name

    # Notify the user that the data was inserted successfully
    zenity --notification --text="Data inserted into table '$Tb_name' successfully!"
}
    select_from_table() {

        Tb_name=$(zenity --entry --text="Please Enter Table Name")
                            if [[ -z $Tb_name || $Tb_name =~ ^[" "]+$ ]]
                            then
                                zenity --error --text="Table Name Can't be Empty"
                            else
                                if [[ -e $Tb_name ]]
                                then
                                    zenity --notification --text="Table $Tb_name Selected"
                                    columns=$(awk -F: '{print $1}' .$Tb_name-metadata)
                                    
                                else
                                    zenity --error --text="Table $Tb_name doesn't exist"
                                fi
                            fi
    }
